package com.carcaddy.model;

import java.time.LocalDate;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import jakarta.persistence.*;
import jakarta.validation.constraints.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "maintenance")
public class Maintenance {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long maintenanceId;

    @NotBlank(message = "This field cannot be empty")
    private String defectType;

    @NotBlank(message = "This field cannot be empty")
    private String defectDescription;

   @PastOrPresent(message = "This field value should be either past or current date")
    private LocalDate dateReceivedForMaintenance;

    @FutureOrPresent(message = "This field value should be either current or future date")
    private LocalDate expectedDeliveryDate;

    @Positive(message = "Maintenance cost should be greater than zero")
    private Double maintenanceCost;

    @NotBlank(message = "This field cannot be empty")
    private String maintenanceStatus;

    @ManyToOne
    @JoinColumn(name = "carId") 
    @JsonIgnoreProperties("maintenance")
    private Car car;

    public Long getCarId() {
        return car != null ? car.getCarId() : null;
    }


		
}
